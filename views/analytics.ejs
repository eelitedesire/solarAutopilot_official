<!DOCTYPE html>
<html>
  <head> 
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Solar Autopilot </title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="all,follow">
    <!-- Bootstrap CSS-->
    <link rel="stylesheet" href="vendor/bootstrap/css/bootstrap.min.css">
    <!-- Font Awesome CSS-->
    <link rel="stylesheet" href="vendor/font-awesome/css/font-awesome.min.css">
    <!-- Custom Font Icons CSS-->
    <link rel="stylesheet" href="css/font.css">
    <!-- Google fonts - Muli-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Muli:300,400,700">
    <!-- theme stylesheet-->
    <link rel="stylesheet" href="css/style.default.css" id="theme-stylesheet">
    <!-- Custom stylesheet - for your changes-->
    <link rel="stylesheet" href="css/custom.css">
    <!-- Favicon-->
    <link rel="shortcut icon" href="https://carbonoz.com/assets/images/image04.jpg?v=8b5d1d9b">
    <!-- Tweaks for older IEs--><!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script><![endif]-->

        <script>
            function generateCSV(tableId) {
                let csv = [];
                const rows = document.querySelectorAll(`#${tableId} tbody tr`);
        
                // Header row
                let headerRow = [];
                const headers = document.querySelectorAll(`#${tableId} thead th`);
                headers.forEach(header => {
                    headerRow.push(header.textContent.trim());
                });
                csv.push(headerRow.join(','));
        
                // Data rows
                rows.forEach(row => {
                    let rowData = [];
                    const cells = row.querySelectorAll('td');
                    cells.forEach(cell => {
                        rowData.push(cell.textContent.trim());
                    });
                    csv.push(rowData.join(','));
                });
        
                // Create a Blob object with CSV data
                const blob = new Blob([csv.join('\n')], { type: 'text/csv;charset=utf-8;' });
                const url = URL.createObjectURL(blob);
        
                // Update download link
                const downloadLink = document.getElementById(`${tableId}-download`);
                downloadLink.href = url;
                downloadLink.download = `${tableId}-${new Date().toISOString()}.csv`;
            }
        
            setInterval(() => {
                generateCSV('last30days-table');
                generateCSV('last12months-table');
            }, 2000);
        
            function getTableData(tableId) {
                const rows = document.querySelectorAll(`#${tableId} tbody tr`);
                let labels = [];
                let solarData = [];
                let gridData = [];
                let loadData = [];
        
                rows.forEach(row => {
                    const cells = row.querySelectorAll('td');
                    labels.push(cells[0].textContent.trim());
                    solarData.push(parseFloat(cells[1].textContent.trim()));
                    gridData.push(parseFloat(cells[2].textContent.trim()));
                    loadData.push(parseFloat(cells[3].textContent.trim()));
                });
        
                return { labels, solarData, gridData, loadData };
            }
        
            function updateChart(chartElementId, labels, datasets) {
                const ctx = document.getElementById(chartElementId).getContext('2d');
                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: datasets
                    },
                    options: {
                        responsive: true,
                        scales: {
                            x: { stacked: true },
                            y: {
                                stacked: true,
                                title: { display: true, text: 'kWh' }
                            }
                        },
                        plugins: {
                            legend: { position: 'top' },
                            title: { display: true, text: chartElementId.replace(/-/g, ' ') }
                        }
                    }
                });
            }
        
            document.addEventListener('DOMContentLoaded', () => {
                const last30DaysData = getTableData('last30days-table');
                updateChart('last-30-days-chart', last30DaysData.labels, [
                    { label: 'Solar', data: last30DaysData.solarData, backgroundColor: '#FFA500' },
                    { label: 'Grid', data: last30DaysData.gridData, backgroundColor: '#4CAF50' },
                    { label: 'Load', data: last30DaysData.loadData, backgroundColor: '#FF5722' }
                ]);
        
                const last12MonthsData = getTableData('last12months-table');
                updateChart('last-12-months-chart', last12MonthsData.labels, [
                    { label: 'Solar', data: last12MonthsData.solarData, backgroundColor: '#FFA500' },
                    { label: 'Grid', data: last12MonthsData.gridData, backgroundColor: '#4CAF50' },
                    { label: 'Load', data: last12MonthsData.loadData, backgroundColor: '#FF5722' }
                ]);
        
                function calculateSolarPVTotals(data) {
                    let dailyTotal = 0;
                    let weeklyTotal = 0;
                    let monthlyTotal = 0;
        
                    dailyTotal = data.solarData[0];
                    for (let i = 0; i < 7; i++) {
                        weeklyTotal += data.solarData[i];
                    }
                    for (let i = 0; i < 30; i++) {
                        monthlyTotal += data.solarData[i];
                    }
        
                    return { dailyTotal, weeklyTotal, monthlyTotal };
                }
        
                const solarPVTotalsLast30Days = calculateSolarPVTotals(last30DaysData);
                document.getElementById('daily-solar-pv-total').textContent = `${solarPVTotalsLast30Days.dailyTotal.toFixed(1)} kWh`;
                document.getElementById('weekly-solar-pv-total').textContent = `${solarPVTotalsLast30Days.weeklyTotal.toFixed(1)} kWh`;
                document.getElementById('monthly-solar-pv-total').textContent = `${solarPVTotalsLast30Days.monthlyTotal.toFixed(1)} kWh`;
            });
            </script>
  </head>
  <body>
    <header class="header">   
      <nav class="navbar navbar-expand-lg">
        <div class="search-panel">
          <div class="search-inner d-flex align-items-center justify-content-center">
            <div class="close-btn">Close <i class="fa fa-close"></i></div>
            <form id="searchForm" action="#">
              <div class="form-group">
                <input type="search" name="search" placeholder="What are you searching for...">
                <button type="submit" class="submit">Search</button>
              </div>
            </form>
          </div>
        </div>
        <div class="container-fluid d-flex align-items-center justify-content-between">
          <div class="navbar-header">
            <!-- Navbar Header--><a href="<%= ingress_path %>/" class="navbar-brand">
              <div class="brand-text brand-big visible text-uppercase"><img src="https://carbonoz.com/assets/images/image04.jpg?v=8b5d1d9b" alt="" width="40px"style="margin-right: 10px;"><strong class="text-primary">Solar</strong><strong>Autopilot</strong></div>
              <div class="brand-text brand-sm"><img src="https://carbonoz.com/assets/images/image04.jpg?v=8b5d1d9b" alt="" width="40px"style="margin-right: 10px;"><strong class="text-primary">S</strong><strong>A</strong></div></a>
            <!-- Sidebar Toggle Btn-->
            <button class="sidebar-toggle"><i class="fa fa-long-arrow-left"></i></button>
          </div>
         
        </div>
      </nav>
    </header>
    <div class="d-flex align-items-stretch">
      <!-- Sidebar Navigation-->
      <nav id="sidebar">
        <!-- Sidebar Header-->
        <div class="sidebar-header d-flex align-items-center">

          
        </div>
        <!-- Sidebar Navidation Menus--><span class="heading">Main</span>
        <ul class="list-unstyled">
            <li class="active"><a href="<%= ingress_path %>/"><i class="fa fa-home"></i> Home</a></li>
  
            <li><a href="<%= ingress_path %>/dashboard"><i class="fa fa-bolt"></i> Energy</a></li>
            <li><a href="<%= ingress_path %>/analytics"><i class="fa fa-calculator"></i> Totals</a></li>
  
         
                <li><a href="<%= ingress_path %>/messages"><i class="fa fa-envelope"></i> Messages</a></li>
  
                <li><a href="<%= ingress_path %>/settings"><i class="fa fa-cog"></i> Settings</a></li>
               
  
  
        </ul>
      </nav>
      <!-- Sidebar Navigation end-->
      <div class="page-content">
        <div class="page-header">
          <div class="container-fluid">
            <h2 class="h5 no-margin-bottom">Totals</h2>
          </div>
        </div>
    
        
       
    
       
        <section>
            <div class="main-content">
                <div class="container-fluid">
                    
                    <div class="row">
                        <div class="col-md-12">
    
                            <div class="container-xl">
                                <div class="row g-3">
                                    <div class="col-md-4">
                                        <div class="card card-body " style="background-color: #fff; color: #000;">
                                            <h4 class="card-title">Today</h4>
                                            <div class="card-text">
                                                <h4>
                                                    <img src="https://www.svgrepo.com/download/293503/solar-panel.svg" class="img-fluid" alt="Solar Panel" width="50"/>
                                                    <span class="text-secondary">Solar PV Total:</span>
                                                    <span id="daily-solar-pv-total">Calculating...</span>
                                                </h4>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="card card-body " style="background-color: #fff; color: #000;">
                                            <h4 class="card-title">Last 7 days</h4>
                                            <div class="card-text">
                                                <h4>
                                                    <img src="https://www.svgrepo.com/download/293503/solar-panel.svg" class="img-fluid" alt="Solar Panel" width="50"/>
                                                    <span class="text-secondary">Solar PV Total:</span>
                                                    <span id="weekly-solar-pv-total">Calculating...</span>
                                                </h4>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="card card-body " style="background-color: #fff; color: #000;">
                                            <h4 class="card-title">Last 30 days</h4>
                                            <div class="card-text">
                                                <h4>
                                                    <img src="https://www.svgrepo.com/download/293503/solar-panel.svg" class="img-fluid" alt="Solar Panel" width="50"/>
                                                    <span class="text-secondary"> Solar PV Total:</span>
                                                    <span id="monthly-solar-pv-total">Calculating...</span>
                                                </h4>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="chartMenu">
                                <p>Last 30 Days</p>
                            </div>
                            <div class="chartCard">
                                <div class="chartBox">
                                    <canvas id="last-30-days-chart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-1">
                        <div class="col-md-12">
                            <div class="table-container">
                                <table id="last30days-table">
                                    <thead>
                                        <tr>
                                            <th>Date</th>
                                            <th>Solar PV</th>
                                            <th>Load</th> 
                                            <th>Battery Charged</th>
                                            <th>Battery Discharged</th>
                                            <th>Grid Used</th>
                                            <th>Grid Exported</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% for (let i = data.loadPowerData.length - 1; i >= 1 && i >= data.loadPowerData.length - 30; i--) { %>
                                            <tr>
                                                <!-- Display formatted date -->
                                                <td><%= new Date(data.loadPowerData[i].time).toLocaleDateString('en-GB', { timeZone: 'Indian/Mauritius' }) %></td>
                                                
                                                <% 
                                                    let loadPowerDiff = 0, pvPowerDiff = 0, batteryStateOfChargeDiff = 0, batteryPowerDiff = 0, gridPowerDiff = 0, netPVPowerDiff = 0;
                                                    
                                                    // Ensure data exists and is valid before calculating differences
                                                    if (data.loadPowerData[i-1] && data.loadPowerData[i] && data.loadPowerData[i-1].value !== null && data.loadPowerData[i].value !== null) {
                                                        loadPowerDiff = data.loadPowerData[i].value >= data.loadPowerData[i-1].value ? (data.loadPowerData[i].value - data.loadPowerData[i-1].value).toFixed(1) : data.loadPowerData[i].value.toFixed(1);
                                                    }
                                                    if (data.pvPowerData[i-1] && data.pvPowerData[i] && data.pvPowerData[i-1].value !== null && data.pvPowerData[i].value !== null) {
                                                        pvPowerDiff = data.pvPowerData[i].value >= data.pvPowerData[i-1].value ? (data.pvPowerData[i].value - data.pvPowerData[i-1].value).toFixed(1) : data.pvPowerData[i].value.toFixed(1);
                                                    }
                                                    if (data.batteryStateOfChargeData[i-1] && data.batteryStateOfChargeData[i] && data.batteryStateOfChargeData[i-1].value !== null && data.batteryStateOfChargeData[i].value !== null) {
                                                        batteryStateOfChargeDiff = data.batteryStateOfChargeData[i].value >= data.batteryStateOfChargeData[i-1].value ? (data.batteryStateOfChargeData[i].value - data.batteryStateOfChargeData[i-1].value).toFixed(1) : data.batteryStateOfChargeData[i].value.toFixed(1);
                                                    }
                                                    if (data.batteryPowerData[i-1] && data.batteryPowerData[i] && data.batteryPowerData[i-1].value !== null && data.batteryPowerData[i].value !== null) {
                                                        batteryPowerDiff = data.batteryPowerData[i].value >= data.batteryPowerData[i-1].value ? (data.batteryPowerData[i].value - data.batteryPowerData[i-1].value).toFixed(1) : data.batteryPowerData[i].value.toFixed(1);
                                                    }
                                                    if (data.gridPowerData[i-1] && data.gridPowerData[i] && data.gridPowerData[i-1].value !== null && data.gridPowerData[i].value !== null) {
                                                        gridPowerDiff = data.gridPowerData[i].value >= data.gridPowerData[i-1].value ? (data.gridPowerData[i].value - data.gridPowerData[i-1].value).toFixed(1) : data.gridPowerData[i].value.toFixed(1);
                                                    }
                                                    if (data.gridVoltageData[i-1] && data.gridVoltageData[i] && data.gridVoltageData[i-1].value !== null && data.gridVoltageData[i].value !== null) {
                                                        netPVPowerDiff = data.gridVoltageData[i].value >= data.gridVoltageData[i-1].value ? (data.gridVoltageData[i].value - data.gridVoltageData[i-1].value).toFixed(1) : data.gridVoltageData[i].value.toFixed(1);
                                                    }
                                                %> 
                                                <td><%= pvPowerDiff %> kWh</td>
                                                <td><%= loadPowerDiff %> kWh</td>
                                                <td><%= batteryStateOfChargeDiff %> kWh</td>
                                                <td><%= batteryPowerDiff %> kWh</td>
                                                <td><%= gridPowerDiff %> kWh</td>
                                                <td><%= netPVPowerDiff %> kWh</td>
                                            </tr>
                                        <% } %>
                                    </tbody>
                                </table>
                                <a id="last30days-table-download" style="background-color: #DEAF0B;color: #000;"class="btn mt-3">Download CSV</a>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-1">
                        <div class="col-md-12">
                            <div class="chartMenu">
                                <p>Last 12 Months</p>
                            </div>
                            <div class="chartCard">
                                <div class="chartBox">
                                    <canvas id="last-12-months-chart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-1">
                        <div class="col-md-12">
                            <div class="table-container">
                                <table id="last12months-table">
                                    <thead>
                                        <tr>
                                            <th>Month</th>
                                            <th>Solar PV</th>
                                            <th>Load</th>
                                            <th>Battery Charged</th>
                                            <th>Battery Discharged</th>
                                            <th>Grid Used</th>
                                            <th>Grid Exported</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% 
                                        let monthlyData = {};
                                        let today = new Date();
                                        
                                        // Initialize the last 12 months
                                        for (let i = 0; i < 12; i++) {
                                            let date = new Date(today.getFullYear(), today.getMonth() - i, 1);
                                            let monthKey = date.toLocaleString('default', { month: 'long', year: 'numeric' });
                                            monthlyData[monthKey] = {
                                                load: 0, solar: 0, batteryCharged: 0, 
                                                batteryDischarged: 0, gridUsed: 0, gridExported: 0
                                            };
                                        }
                            
                                        // Sum up the data for each month using the same formula as in the 30-day table
                                        for (let i = data.loadPowerData.length - 1; i >= 1 && i >= data.loadPowerData.length - 30; i--) {
                                            let date = new Date(data.loadPowerData[i].time);
                                            let monthKey = date.toLocaleString('default', { month: 'long', year: 'numeric' });
                                            
                                            if (monthlyData[monthKey]) {
                                                let loadPowerDiff, pvPowerDiff, batteryStateOfChargeDiff, batteryPowerDiff, gridPowerDiff, netPVPowerDiff;
                                                
                                                if (data.loadPowerData[i-1].value === null || data.loadPowerData[i-1].value === 0) {
                                                    loadPowerDiff = 0;
                                                    pvPowerDiff = 0;
                                                    batteryStateOfChargeDiff = 0;
                                                    batteryPowerDiff = 0;
                                                    gridPowerDiff = 0;
                                                    netPVPowerDiff = 0;
                                                } else {
                                                    loadPowerDiff = data.loadPowerData[i].value >= data.loadPowerData[i-1].value ? 
                                                        (data.loadPowerData[i].value - data.loadPowerData[i-1].value) : data.loadPowerData[i].value;
                                                    pvPowerDiff = data.pvPowerData[i].value >= data.pvPowerData[i-1].value ? 
                                                        (data.pvPowerData[i].value - data.pvPowerData[i-1].value) : data.pvPowerData[i].value;
                                                    batteryStateOfChargeDiff = data.batteryStateOfChargeData[i].value >= data.batteryStateOfChargeData[i-1].value ? 
                                                        (data.batteryStateOfChargeData[i].value - data.batteryStateOfChargeData[i-1].value) : data.batteryStateOfChargeData[i].value;
                                                    batteryPowerDiff = data.batteryPowerData[i].value >= data.batteryPowerData[i-1].value ? 
                                                        (data.batteryPowerData[i].value - data.batteryPowerData[i-1].value) : data.batteryPowerData[i].value;
                                                    gridPowerDiff = data.gridPowerData[i].value >= data.gridPowerData[i-1].value ? 
                                                        (data.gridPowerData[i].value - data.gridPowerData[i-1].value) : data.gridPowerData[i].value;
                                                    netPVPowerDiff = data.gridVoltageData[i].value >= data.gridVoltageData[i-1].value ? 
                                                        (data.gridVoltageData[i].value - data.gridVoltageData[i-1].value) : data.gridVoltageData[i].value;
                                                }
                            
                                                monthlyData[monthKey].load += loadPowerDiff;
                                                monthlyData[monthKey].solar += pvPowerDiff;
                                                monthlyData[monthKey].batteryCharged += batteryStateOfChargeDiff;
                                                monthlyData[monthKey].batteryDischarged += batteryPowerDiff;
                                                monthlyData[monthKey].gridUsed += gridPowerDiff;
                                                monthlyData[monthKey].gridExported += netPVPowerDiff;
                                            }
                                        }
                            
                                        // Display the data for each month
                                        Object.keys(monthlyData).forEach(month => {
                                            let data = monthlyData[month];
                                        %>
                                            <tr>
                                                <td><%= month %></td>
                                                 <td><%= data.solar.toFixed(1) %> kWh</td>
                                                 <td><%= data.load.toFixed(1) %> kWh</td>
                                                <td><%= data.batteryCharged.toFixed(1) %> kWh</td>
                                                <td><%= data.batteryDischarged.toFixed(1) %> kWh</td>
                                                <td><%= data.gridUsed.toFixed(1) %> kWh</td>
                                                <td><%= data.gridExported.toFixed(1) %> kWh</td>
                                            </tr>
                                        <% }); %>
                                    </tbody>
                                </table>
                                <a id="last12months-table-download"style="background-color: #DEAF0B;color: #000;" class="btn mt-3">Download CSV</a>
                              
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <footer class="footer">
          <div class="footer__block block no-margin-bottom">
            <div class="container-fluid text-center">
              <!-- Please do not remove the backlink to us unless you support us at https://bootstrapious.com/donate. It is part of the license conditions. Thank you for understanding :)-->
               <p class="no-margin-bottom">2024 &copy; Carbonoz</p>
            </div>
          </div>
        </footer>
      </div>
    </div>
    <!-- JavaScript files-->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/popper.js/umd/popper.min.js"> </script>
    <script src="vendor/bootstrap/js/bootstrap.min.js"></script>
    <script src="vendor/jquery.cookie/jquery.cookie.js"> </script>
    <script src="vendor/chart.js/Chart.min.js"></script>
    <script src="vendor/jquery-validation/jquery.validate.min.js"></script>
    <script src="js/charts-home.js"></script>
    <script src="js/front.js"></script>
  </body>
</html>