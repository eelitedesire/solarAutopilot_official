<!DOCTYPE html>
<html>
  <head> 
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Solar Autopilot </title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="all,follow">
    <!-- Bootstrap CSS-->
    <link rel="stylesheet" href="vendor/bootstrap/css/bootstrap.min.css">
    <!-- Font Awesome CSS-->
    <link rel="stylesheet" href="vendor/font-awesome/css/font-awesome.min.css">
    <!-- Custom Font Icons CSS-->
    <link rel="stylesheet" href="css/font.css">
    <!-- Google fonts - Muli-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Muli:300,400,700">
    <!-- theme stylesheet-->
    <link rel="stylesheet" href="css/style.default.css" id="theme-stylesheet">
    <!-- Custom stylesheet - for your changes-->
    <link rel="stylesheet" href="css/custom.css">
    <!-- Favicon-->
    <link rel="shortcut icon" href="https://carbonoz.com/assets/images/image04.jpg?v=8b5d1d9b">
    <!-- Tweaks for older IEs--><!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script><![endif]-->
    
    <!-- Add ApexCharts library -->
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    
    <style>
      /* Add some styles for the charts */
      .charts{
        flex: 1 1 100%;
  min-width: 250px;
  max-width: 100%;
  margin-bottom: 20px;
  background-color: #fff;
  border-radius: 8px;
  border: 1px solid #e0e0e0;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05), 0 4px 8px rgba(0, 0, 0, 0.05);
  padding: 15px;
  transition: all 0.3s ease;
}
      
      .chart-container {
        margin-top: 20px;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
      }

      .dashboard {   display: flex;   flex-wrap: wrap;   justify-content: space-around;   gap: 20px;   padding: 15px;   background-color: #f8f9fa; } .chart-container {   flex: 1 1 100%;   min-width: 250px;   max-width: 100%;   margin-bottom: 20px;   background-color: #fff;   border-radius: 8px;   border: 1px solid #e0e0e0;   box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05), 0 4px 8px rgba(0, 0, 0, 0.05);   padding: 15px;   transition: all 0.3s ease; } .chart-container:hover {   transform: translateY(-5px);   box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1), 0 8px 16px rgba(0, 0, 0, 0.1);   border-color: #d0d0d0; } .chart-container h2 {   font-size: 1rem;   margin-bottom: 10px;   color: #333;   text-align: center;   padding-bottom: 8px;   border-bottom: 2px solid #f0f0f0; } #energy-flow-diagram svg {   max-width: 90%;   height: auto; } canvas {   max-width: 90%;   height: auto !important; }    @media (min-width: 576px) {   .dashboard {     padding: 20px;   }   .chart-container {     padding: 20px;   }   .chart-container h2 {     font-size: 1.1rem;   } }  @media (min-width: 768px) {   .chart-container {     flex: 1 1 calc(50% - 20px);   }   .chart-container h2 {     font-size: 1.2rem;   } }  @media (min-width: 992px) {   .dashboard {     padding: 25px;   }   .chart-container {     padding: 25px;   } }  @media (min-width: 1200px) {   .chart-container {     flex: 1 1 calc(33.333% - 20px);   } }   @media (max-width: 375px) {   .dashboard {     padding: 10px;   }   .chart-container {     padding: 10px;   }   .chart-container h2 {     font-size: 0.9rem;     margin-bottom: 8px;     padding-bottom: 6px;   } }
    </style>
  </head>
  <body>
    <header class="header">   
      <nav class="navbar navbar-expand-lg">
        <div class="search-panel">
          <div class="search-inner d-flex align-items-center justify-content-center">
            <div class="close-btn">Close <i class="fa fa-close"></i></div>
            <form id="searchForm" action="#">
              <div class="form-group">
                <input type="search" name="search" placeholder="What are you searching for...">
                <button type="submit" class="submit">Search</button>
              </div>
            </form>
          </div>
        </div>
        <div class="container-fluid d-flex align-items-center justify-content-between">
          <div class="navbar-header">
            <!-- Navbar Header--><a href="<%= ingress_path %>/" class="navbar-brand">
              <div class="brand-text brand-big visible text-uppercase"><img src="https://carbonoz.com/assets/images/image04.jpg?v=8b5d1d9b" alt="" width="40px"style="margin-right: 10px;"><strong class="text-primary">Solar</strong><strong>Autopilot</strong></div>
              <div class="brand-text brand-sm"><img src="https://carbonoz.com/assets/images/image04.jpg?v=8b5d1d9b" alt="" width="40px"style="margin-right: 10px;"><strong class="text-primary">S</strong><strong>A</strong></div></a>
            <!-- Sidebar Toggle Btn-->
            <button class="sidebar-toggle"><i class="fa fa-long-arrow-left"></i></button>
          </div>
         
        </div>
      </nav>
    </header>
    <div class="d-flex align-items-stretch">
      <!-- Sidebar Navigation-->
      <nav id="sidebar">
        <!-- Sidebar Header-->
        <div class="sidebar-header d-flex align-items-center">
          
        </div>
        <!-- Sidebar Navidation Menus--><span class="heading">Main</span>
        <ul class="list-unstyled">
          <li class="active"><a href="<%= ingress_path %>/"><i class="fa fa-home"></i> Home</a></li>
          <li><a href="<%= ingress_path %>/dashboard"><i class="fa fa-bolt"></i> Energy</a></li>
          <li><a href="<%= ingress_path %>/analytics"><i class="fa fa-calculator"></i> Totals</a></li>
          <li><a href="<%= ingress_path %>/messages"><i class="fa fa-envelope"></i> Messages</a></li>
          <li><a href="<%= ingress_path %>/settings"><i class="fa fa-cog"></i> Settings</a></li>
        </ul>
      </nav>
      <!-- Sidebar Navigation end-->
      <div class="page-content">
        <div class="page-header">
          <div class="container-fluid">
            <h2 class="h5 no-margin-bottom">Dashboard</h2>
          </div>
        </div>
    
        <section>
          <div class="grid-container">
            <!-- Solar Production Card -->
            <div class="card">
              <div class="card-content" style="--clr:#06ccff;--num:78">
                <div class="circle-progress solar-production">
                  <svg>
                    <circle class="background" cx="70" cy="70" r="70"></circle>
                    <circle class="progress" cx="70" cy="70" r="70"></circle>
                  </svg>
                  <i class="fas fa-solar-panel icon" style="color: #06ccff;">Solar</i>
                  <div class="number">
                    <div class="value">0.0 W </div>
                  </div>
                </div>
                <home-assistant-energy-usage-card
                  period="daily"
                  detail-period="monthly"
                  data="<%= JSON.stringify(data.solarProductionData) %>">
                </home-assistant-energy-usage-card>
              </div>
            </div>
            <!-- Battery State of Charge Card -->
            <div class="card">
              <div class="card-content" style="--clr:#ff00be;--num:78">
                <div class="circle-progress battery-state-of-charge">
                  <svg>
                    <circle class="background" cx="70" cy="70" r="70"></circle>
                    <circle class="progress" cx="70" cy="70" r="70"></circle>
                  </svg>
                  <i class="fas fa-battery-full icon" style="color: #ff00be;">Battery</i>
                  <div class="number">
                    <div class="value">0.0 %</div>
                  </div>
                </div>
                <home-assistant-battery-storage-card
                  data="<%= JSON.stringify(data.batteryStateOfChargeData) %>">
                </home-assistant-battery-storage-card>
              </div>
            </div>
            <!-- Grid Import Card -->
            <div class="card">
              <div class="card-content" style="--clr:#fee800;;--num:78">
                <div class="circle-progress grid-import">
                  <svg>
                    <circle class="background" cx="70" cy="70" r="70"></circle>
                    <circle class="progress" cx="70" cy="70" r="70"></circle>
                  </svg>
                  <i class="fas fa-bolt icon" style="color: #fee800;;">Grid
                </i>
                  <div class="number">
                    <div class="value">0.0 W</div>
                  </div>
                </div>
                <home-assistant-energy-usage-card
                  period="daily"
                  detail-period="monthly"
                  data="<%= JSON.stringify(data.gridPowerData) %>">
                </home-assistant-energy-usage-card>
              </div>
            </div>
            <!-- Load Power Card -->
            <div class="card">
              <div class="card-content" style="--clr: #00ffae;--num:78">
                <div class="circle-progress load-power">
                  <svg>
                    <circle class="background" cx="70" cy="70" r="70"></circle>
                    <circle class="progress" cx="70" cy="70" r="70"></circle>
                  </svg>
                  <i class="fas fa-bolt icon" style="color: #00ffae;">Load</i>
                  <div class="number">
                    <div class="value">0.0 W</div>
                  </div>
                </div>
                <home-assistant-energy-usage-card
                  period="daily"
                  detail-period="monthly"
                  data="<%= JSON.stringify(data.loadPowerData) %>">
                </home-assistant-energy-usage-card>
              </div>
            </div>
      
            <!-- Grid Voltage Card -->
            <div class="card">
              <div class="card-content" style="--clr:#ffa500;--num:78">
                <div class="circle-progress grid-voltage">
                  <svg>
                    <circle class="background" cx="70" cy="70" r="70"></circle>
                    <circle class="progress" cx="70" cy="70" r="70"></circle>
                  </svg>
                  <i class="fas fa-bolt icon" style="color: #ffa500;">Grid V</i>
                  <div class="number">
                    <div class="value">0.0 V</div>
                  </div>
                </div>
              </div>
            </div>

           
          </div>
        </section>
        
        <!-- Add a new section for charts -->
        <section class="charts">
          <div class="container">
            <div class="row">
              <div class="col-md-6">
                <div class="chart-container">
                  <div id="powerChart"></div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="chart-container">
                  <div id="batteryChart"></div>
                </div>
              </div>
            </div>
          </div>
        </section>
        
        <footer class="footer">
          <div class="footer__block block no-margin-bottom">
            <div class="container-fluid text-center">
              <p class="no-margin-bottom">2024 &copy; Carbonoz</p>
            </div>
          </div>
        </footer>
      </div>
    </div>
    <!-- JavaScript files-->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/popper.js/umd/popper.min.js"> </script>
    <script src="vendor/bootstrap/js/bootstrap.min.js"></script>
    <script src="vendor/jquery.cookie/jquery.cookie.js"> </script>
    <script src="vendor/chart.js/Chart.min.js"></script>
    <script src="vendor/jquery-validation/jquery.validate.min.js"></script>
    <script src="js/charts-home.js"></script>
    <script src="js/front.js"></script>

    <script>
      // Initialize chart variables
      let powerChart, batteryChart;
      
      function initCharts() {
        const powerChartOptions = {
          series: [
            { name: 'PV power', data: [] },
            { name: 'Grid power', data: [] },
            { name: 'Load power', data: [] }
          ],
          chart: {
            type: 'line',
            height: 350,
            animations: {
              enabled: false
            }
          },
          xaxis: {
            type: 'datetime'
          },
          yaxis: {
            title: {
              text: 'Power (W)'
            }
          },
          title: {
            text: 'Overview'
          }
        };
        
        const batteryChartOptions = {
          series: [
            { name: 'Battery State of Charge', data: [] }
          ],
          chart: {
            type: 'line',
            height: 350,
            animations: {
              enabled: false
            }
          },
          xaxis: {
            type: 'datetime'
          },
          yaxis: {
            title: {
              text: 'State of Charge (%)'
            },
            max: 100
          },
          title: {
            text: 'Battery state of charge'
          }
        };
        
        powerChart = new ApexCharts(document.querySelector("#powerChart"), powerChartOptions);
        batteryChart = new ApexCharts(document.querySelector("#batteryChart"), batteryChartOptions);
        
        powerChart.render();
        batteryChart.render();
      }

      function updateRealTimeData() {
        fetch('<%= ingress_path %>/api/realtime-data')
          .then(response => response.json())
          .then(data => {
            console.log('Fetched Data:', data);

            updateCircleProgress('.solar-production', data.solarProduction, '#06ccff');
            updateCircleProgress('.battery-state-of-charge', data.batteryStateOfCharge, '#ff00be');
            updateCircleProgress('.grid-import', data.gridImport, '#fee800');
            updateCircleProgress('.load-power', data.loadPower, '#00ffae');
            updateCircleProgress('.grid-voltage', data.gridVoltage, '#ffa500');

            // Update charts with fetched data
            updateChartsWithData(data);
          })
          .catch(error => {
            console.error('Error fetching real-time data:', error);
          });
      }

      function updateCircleProgress(selector, data, color) {
        const progressElement = document.querySelector(`${selector} .progress`);
        const valueElement = document.querySelector(`${selector} .value`);
        const iconElement = document.querySelector(`${selector} .icon`);

        const maxValue = selector === '.grid-voltage' ? 500 : 1000; // Maximum value for grid voltage and other metrics
        const progress = (data.value / maxValue) * 100;

        progressElement.style.strokeDashoffset = 565.48 - (565.48 * progress / 100);
        progressElement.style.stroke = color;
        iconElement.style.color = color;
        valueElement.textContent = `${data.value.toFixed(2)} ${selector === '.grid-voltage' ? 'V' : 'W'}`;
      }

      function updateChartsWithData(data) {
        const timestamp = new Date().getTime();
        
        // Update power chart
        powerChart.appendData([
          { data: [{ x: timestamp, y: data.solarProduction.value }] },
          { data: [{ x: timestamp, y: data.gridImport.value }] },
          { data: [{ x: timestamp, y: data.loadPower.value }] }
        ]);
        
        // Update battery chart
        batteryChart.appendData([
          { data: [{ x: timestamp, y: data.batteryStateOfCharge.value }] }
        ]);
        
        // Remove old data points to keep the chart showing the last 30 minutes
        const thirtyMinutesAgo = timestamp - 30 * 60 * 1000;
        powerChart.updateOptions({
          xaxis: {
            min: thirtyMinutesAgo
          }
        });
        batteryChart.updateOptions({
          xaxis: {
            min: thirtyMinutesAgo
          }
        });
      }

      // Initialize charts and start updating real-time data
      document.addEventListener('DOMContentLoaded', function() {
        initCharts();
        updateRealTimeData(); // Initial update
        setInterval(updateRealTimeData, 5000); // Update every 5 seconds
      });
    </script>
  </body>
</html>
